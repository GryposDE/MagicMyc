

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 19 22:12:46 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F15Q41
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 18/12/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F15Q41 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66 ;; Function _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
    67   000000                     
    68 ;; Function _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
    69   000000                     
    70 ;; Function _PWM1_16BIT_Period_DefaultInterruptHandler is unused but had its address taken
    71   000000                     
    72 ;; Function _PWM2_16BIT_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
    73   000000                     
    74 ;; Function _PWM2_16BIT_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
    75   000000                     
    76 ;; Function _PWM2_16BIT_Period_DefaultInterruptHandler is unused but had its address taken
    77   000000                     
    78 ;; Function _SPI1_Deinitialize is unused but had its address taken
    79   000000                     
    80 ;; Function _SPI1_Open is unused but had its address taken
    81   000000                     
    82 ;; Function _SPI1_Close is unused but had its address taken
    83   000000                     
    84 ;; Function _SPI1_BufferExchange is unused but had its address taken
    85   000000                     
    86 ;; Function _SPI1_BufferWrite is unused but had its address taken
    87   000000                     
    88 ;; Function _SPI1_BufferRead is unused but had its address taken
    89   000000                     
    90 ;; Function _SPI1_ByteExchange is unused but had its address taken
    91   000000                     
    92 ;; Function _SPI1_ByteWrite is unused but had its address taken
    93   000000                     
    94 ;; Function _SPI1_ByteRead is unused but had its address taken
    95   000000                     
    96 ;; Function _SPI1_IsTxReady is unused but had its address taken
    97   000000                     
    98 ;; Function _SPI1_IsRxReady is unused but had its address taken
    99   000000                     
   100 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   101   000000                     
   102 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   103   000000                     
   104 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   105   000000                     
   106                           	psect	smallconst
   107   000D00                     __psmallconst:
   108                           	callstack 0
   109   000D00  00                 	db	0
   110   000D01                     _SPI1_Host:
   111                           	callstack 0
   112   000D01  F0                 	db	low _SPI1_Initialize
   113   000D02  0F                 	db	high _SPI1_Initialize
   114   000D03  00                 	db	0
   115   000D04  00                 	db	0
   116   000D05  00                 	db	0
   117   000D06  00                 	db	0
   118   000D07  00                 	db	0
   119   000D08  00                 	db	0
   120   000D09  00                 	db	0
   121   000D0A  00                 	db	0
   122   000D0B  00                 	db	0
   123   000D0C  00                 	db	0
   124   000D0D  00                 	db	0
   125   000D0E  00                 	db	0
   126   000D0F  00                 	db	0
   127   000D10  00                 	db	0
   128   000D11  00                 	db	0
   129   000D12  00                 	db	0
   130   000D13  00                 	db	0
   131   000D14  00                 	db	0
   132   000D15  00                 	db	0
   133   000D16  00                 	db	0
   134   000D17  00                 	db	0
   135   000D18  00                 	db	0
   136   000D19  00                 	db	0
   137   000D1A  00                 	db	0
   138   000D1B  00                 	db	0
   139   000D1C  00                 	db	0
   140   000D1D                     __end_of_SPI1_Host:
   141                           	callstack 0
   142   000D1D                     _spi1_configuration:
   143                           	callstack 0
   144   000D1D  02                 	db	2
   145   000D1E  00                 	db	0
   146   000D1F  00                 	db	0
   147   000D20  FF                 	db	255
   148   000D21  00                 	db	0
   149   000D22  02                 	db	2
   150   000D23  40                 	db	64
   151   000D24  00                 	db	0
   152   000D25  00                 	db	0
   153   000D26  00                 	db	0
   154   000D27                     __end_of_spi1_configuration:
   155                           	callstack 0
   156   000000                     _OSCTUNE	set	176
   157   000000                     _OSCFRQ	set	177
   158   000000                     _OSCEN	set	179
   159   000000                     _IOCBF	set	1039
   160   000000                     _IOCBN	set	1038
   161   000000                     _IOCBP	set	1037
   162   000000                     _IOCAF	set	1031
   163   000000                     _IOCAN	set	1030
   164   000000                     _IOCAP	set	1029
   165   000000                     _INLVLB	set	1036
   166   000000                     _INLVLA	set	1028
   167   000000                     _SLRCONB	set	1035
   168   000000                     _SLRCONA	set	1027
   169   000000                     _WPUC	set	1041
   170   000000                     _WPUB	set	1033
   171   000000                     _WPUA	set	1025
   172   000000                     _ANSELC	set	1040
   173   000000                     _ANSELB	set	1032
   174   000000                     _ODCONC	set	1042
   175   000000                     _ODCONB	set	1034
   176   000000                     _SPI1RXB	set	128
   177   000000                     _SPI1TXB	set	129
   178   000000                     _SPI1TCNTL	set	130
   179   000000                     _SPI1TCNTH	set	131
   180   000000                     _SPI1CON0	set	132
   181   000000                     _PWM2CON	set	1144
   182   000000                     _PWM2S1CFG	set	1145
   183   000000                     _PWM2GIE	set	1143
   184   000000                     _PWM2GIR	set	1142
   185   000000                     _PWM2PIPOS	set	1141
   186   000000                     _PWM2CPRE	set	1140
   187   000000                     _PWM2PRH	set	1139
   188   000000                     _PWM2PRL	set	1138
   189   000000                     _PWM2LDS	set	1137
   190   000000                     _PWM2CLK	set	1136
   191   000000                     _PWM2ERS	set	1135
   192   000000                     _PWM1CON	set	1129
   193   000000                     _PIE4bits	set	1196
   194   000000                     _PIR4bits	set	1207
   195   000000                     _PWM1S1P2H	set	1134
   196   000000                     _PWM1S1P2L	set	1133
   197   000000                     _PWM1S1P1H	set	1132
   198   000000                     _PWM1S1P1L	set	1131
   199   000000                     _PWM1S1CFG	set	1130
   200   000000                     _PWM1GIE	set	1128
   201   000000                     _PWM1GIR	set	1127
   202   000000                     _PWM1PIPOS	set	1126
   203   000000                     _PWM1CPRE	set	1125
   204   000000                     _PWM1PRH	set	1124
   205   000000                     _PWM1PRL	set	1123
   206   000000                     _PWM1LDS	set	1122
   207   000000                     _PWM1CLK	set	1121
   208   000000                     _PWM1ERS	set	1120
   209   000D27  00                 	db	0	; dummy byte at the end
   210   000000                     
   211                           	psect	nvCOMRAM
   212   000501                     __pnvCOMRAM:
   213                           	callstack 0
   214   000501                     _INT2_InterruptHandler:
   215                           	callstack 0
   216   000501                     	ds	2
   217   000503                     _INT1_InterruptHandler:
   218                           	callstack 0
   219   000503                     	ds	2
   220   000505                     _INT0_InterruptHandler:
   221                           	callstack 0
   222   000505                     	ds	2
   223   000507                     _PWM2_16BIT_Period_InterruptHandler:
   224                           	callstack 0
   225   000507                     	ds	2
   226   000509                     _PWM2_16BIT_Slice1Output2_InterruptHandler:
   227                           	callstack 0
   228   000509                     	ds	2
   229   00050B                     _PWM2_16BIT_Slice1Output1_InterruptHandler:
   230                           	callstack 0
   231   00050B                     	ds	2
   232   00050D                     _PWM1_16BIT_Period_InterruptHandler:
   233                           	callstack 0
   234   00050D                     	ds	2
   235   00050F                     _PWM1_16BIT_Slice1Output2_InterruptHandler:
   236                           	callstack 0
   237   00050F                     	ds	2
   238   000511                     _PWM1_16BIT_Slice1Output1_InterruptHandler:
   239                           	callstack 0
   240   000511                     	ds	2
   241   000000                     _SPI1CON0bits	set	132
   242   000000                     _TRISB	set	1223
   243   000000                     _PWM2GIEbits	set	1143
   244   000000                     _PWM2CONbits	set	1144
   245   000000                     _PWM2GIRbits	set	1142
   246   000000                     _PWM1GIEbits	set	1128
   247   000000                     _PWM1CONbits	set	1129
   248   000000                     _PWM1GIRbits	set	1127
   249   000000                     _DAC1DATL	set	125
   250   000000                     _DAC1CON	set	127
   251   000000                     _PIR10bits	set	1213
   252   000000                     _PIR6bits	set	1209
   253   000000                     _TRISBbits	set	1223
   254   000000                     _PIR5bits	set	1208
   255   000000                     _PIR1bits	set	1204
   256   000000                     _PIR3bits	set	1206
   257   000000                     _PIE5bits	set	1197
   258   000000                     _PIE3bits	set	1195
   259   000000                     _PWM2S1P2H	set	1149
   260   000000                     _PWM2S1P2L	set	1148
   261   000000                     _PWM2S1P1H	set	1147
   262   000000                     _PWM2S1P1L	set	1146
   263   000000                     _SPI1BAUD	set	137
   264   000000                     _SPI1CON2	set	134
   265   000000                     _SPI1CON1	set	133
   266   000000                     _SPI1INTFbits	set	138
   267   000000                     _SPI1CLK	set	140
   268   000000                     _ACTCON	set	172
   269   000000                     _OSCCON1	set	173
   270   000000                     _RA4PPS	set	517
   271   000000                     _RB4PPS	set	525
   272   000000                     _SPI1SDIPPS	set	619
   273   000000                     _RB6I2C	set	646
   274   000000                     _RB4I2C	set	647
   275   000000                     _ANSELA	set	1024
   276   000000                     _ODCONA	set	1026
   277   000000                     _PORTB	set	1231
   278   000000                     _TRISC	set	1224
   279   000000                     _INTCON0bits	set	1238
   280   000000                     _TRISA	set	1222
   281   000000                     _LATC	set	1216
   282   000000                     _LATB	set	1215
   283   000000                     _LATA	set	1214
   284   000000                     _IOCCF	set	1047
   285   000000                     _IOCCN	set	1046
   286   000000                     _IOCCP	set	1045
   287   000000                     _INLVLC	set	1044
   288   000000                     _SLRCONC	set	1043
   289   000000                     _RB5PPS	set	526
   290   000000                     _RC5PPS	set	534
   291   000000                     _RA5PPS	set	518
   292   000000                     _SPI1SCKPPS	set	618
   293   000000                     _OSCCON3	set	175
   294                           
   295                           ; #config settings
   296                           
   297                           	psect	cinit
   298   001036                     __pcinit:
   299                           	callstack 0
   300   001036                     start_initialization:
   301                           	callstack 0
   302   001036                     __initialization:
   303                           	callstack 0
   304   001036                     end_of_initialization:
   305                           	callstack 0
   306   001036                     __end_of__initialization:
   307                           	callstack 0
   308   001036  0E00               	movlw	low (__Lmediumconst shr (0+16))
   309   001038  6EF8               	movwf	tblptru,c
   310   00103A  0100               	movlb	0
   311   00103C  EF94  F006         	goto	_main	;jump to C main() function
   312                           
   313                           	psect	cstackCOMRAM
   314   000513                     __pcstackCOMRAM:
   315                           	callstack 0
   316   000513                     PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler:
   317                           	callstack 0
   318   000513                     PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler:
   319                           	callstack 0
   320   000513                     PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler:
   321                           	callstack 0
   322   000513                     PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler:
   323                           	callstack 0
   324   000513                     PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler:
   325                           	callstack 0
   326   000513                     PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler:
   327                           	callstack 0
   328   000513                     INT0_SetInterruptHandler@InterruptHandler:
   329                           	callstack 0
   330   000513                     INT1_SetInterruptHandler@InterruptHandler:
   331                           	callstack 0
   332   000513                     INT2_SetInterruptHandler@InterruptHandler:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x0
   336   000513                     	ds	2
   337   000515                     main@xxx:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x2
   341   000515                     	ds	4
   342   000519                     main@bShow:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x6
   346   000519                     	ds	1
   347   00051A                     main@counter:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x7
   351   00051A                     	ds	1
   352   00051B                     main@light:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x8
   356   00051B                     	ds	1
   357                           
   358 ;;
   359 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   360 ;;
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 40 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;  xxx             4    2[COMRAM] unsigned long 
   368 ;;  light           1    8[COMRAM] char 
   369 ;;  counter         1    7[COMRAM] unsigned char 
   370 ;;  bShow           1    6[COMRAM] unsigned char 
   371 ;; Return value:  Size  Location     Type
   372 ;;                  2  573[None  ] int 
   373 ;; Registers used:
   374 ;;		wreg, status,2, status,0, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   380 ;;      Params:         0       0       0       0       0       0       0       0       0
   381 ;;      Locals:         7       0       0       0       0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0       0       0       0       0
   383 ;;      Totals:         7       0       0       0       0       0       0       0       0
   384 ;;Total ram usage:        7 bytes
   385 ;; Hardware stack levels required when called: 3
   386 ;; This function calls:
   387 ;;		_SYSTEM_Initialize
   388 ;; This function is called by:
   389 ;;		Startup code after reset
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           	psect	text0
   394   000D28                     __ptext0:
   395                           	callstack 0
   396   000D28                     _main:
   397                           	callstack 124
   398   000D28                     
   399                           ;main.c: 42:     SYSTEM_Initialize();
   400   000D28  ECE9  F007         	call	_SYSTEM_Initialize	;wreg free
   401   000D2C                     
   402                           ;main.c: 54:     TRISB &= ~(1U << 7U);
   403   000D2C  9EC7               	bcf	199,7,c	;volatile
   404   000D2E                     
   405                           ;main.c: 55:     TRISB &= ~(1U << 6U);
   406   000D2E  9CC7               	bcf	199,6,c	;volatile
   407   000D30                     
   408                           ;main.c: 56:     TRISB &= ~(1U << 5U);
   409   000D30  9AC7               	bcf	199,5,c	;volatile
   410   000D32                     
   411                           ;main.c: 57:     WPUB = 0;
   412   000D32  0E00               	movlw	0
   413   000D34  0104               	movlb	4	; () banked
   414   000D36  6F09               	movwf	9,b	;volatile
   415   000D38                     
   416                           ; BSR set to: 4
   417                           ;main.c: 58:     ODCONB = 0;
   418   000D38  0E00               	movlw	0
   419   000D3A  6F0A               	movwf	10,b	;volatile
   420   000D3C                     
   421                           ; BSR set to: 4
   422                           ;main.c: 60:     uint8_t bShow = 0;
   423   000D3C  0E00               	movlw	0
   424   000D3E  6E19               	movwf	main@bShow^(0+1280),c
   425   000D40                     
   426                           ; BSR set to: 4
   427                           ;main.c: 61:     uint32_t xxx = 0;
   428   000D40  0E00               	movlw	0
   429   000D42  6E15               	movwf	main@xxx^(0+1280),c
   430   000D44  0E00               	movlw	0
   431   000D46  6E16               	movwf	(main@xxx+1)^(0+1280),c
   432   000D48  0E00               	movlw	0
   433   000D4A  6E17               	movwf	(main@xxx+2)^(0+1280),c
   434   000D4C  0E00               	movlw	0
   435   000D4E  6E18               	movwf	(main@xxx+3)^(0+1280),c
   436   000D50                     
   437                           ; BSR set to: 4
   438                           ;main.c: 62:     int8_t light = 0;
   439   000D50  0E00               	movlw	0
   440   000D52  6E1B               	movwf	main@light^(0+1280),c
   441   000D54                     
   442                           ; BSR set to: 4
   443                           ;main.c: 63:     uint8_t counter = 0;
   444   000D54  0E00               	movlw	0
   445   000D56  6E1A               	movwf	main@counter^(0+1280),c
   446   000D58                     l1751:
   447                           
   448                           ;main.c: 65:     {;main.c: 66:         if(counter < light)
   449   000D58  501A               	movf	main@counter^(0+1280),w,c
   450   000D5A  80D8               	bsf	status,0,c
   451   000D5C  84D8               	bsf	status,2,c
   452   000D5E  AE1B               	btfss	main@light^(0+1280),7,c
   453   000D60  5C1B               	subwf	main@light^(0+1280),w,c
   454   000D62  A0D8               	btfss	status,0,c
   455   000D64  84D8               	bsf	status,2,c
   456   000D66  B4D8               	btfsc	status,2,c
   457   000D68  EFB8  F006         	goto	u461
   458   000D6C  EFBA  F006         	goto	u460
   459   000D70                     u461:
   460   000D70  EFBF  F006         	goto	l1755
   461   000D74                     u460:
   462   000D74                     
   463                           ;main.c: 67:         {;main.c: 68:             PORTB |= (1U << 7U);
   464   000D74  8ECF               	bsf	207,7,c	;volatile
   465                           
   466                           ;main.c: 69:             PORTB |= (1U << 5U);
   467   000D76  8ACF               	bsf	207,5,c	;volatile
   468                           
   469                           ;main.c: 70:             PORTB &= ~(1U << 6U);
   470   000D78  9CCF               	bcf	207,6,c	;volatile
   471                           
   472                           ;main.c: 71:         }
   473   000D7A  EFC3  F006         	goto	l576
   474   000D7E                     l1755:
   475                           
   476                           ;main.c: 74:         {;main.c: 75:             PORTB &= ~(1U << 7U);
   477   000D7E  9ECF               	bcf	207,7,c	;volatile
   478   000D80                     
   479                           ;main.c: 76:             PORTB &= (1U << 5U);
   480   000D80  0E20               	movlw	32
   481   000D82  16CF               	andwf	207,f,c	;volatile
   482   000D84                     
   483                           ;main.c: 77:             PORTB |= (1U << 6U);
   484   000D84  8CCF               	bsf	207,6,c	;volatile
   485   000D86                     l576:
   486                           
   487                           ;main.c: 82:         if(++counter > 10)
   488   000D86  2A1A               	incf	main@counter^(0+1280),f,c
   489   000D88  0E0A               	movlw	10
   490   000D8A  641A               	cpfsgt	main@counter^(0+1280),c
   491   000D8C  EFCA  F006         	goto	u471
   492   000D90  EFCC  F006         	goto	u470
   493   000D94                     u471:
   494   000D94  EFAC  F006         	goto	l1751
   495   000D98                     u470:
   496   000D98                     
   497                           ;main.c: 83:         {;main.c: 84:             counter = 0;
   498   000D98  0E00               	movlw	0
   499   000D9A  6E1A               	movwf	main@counter^(0+1280),c
   500   000D9C                     
   501                           ;main.c: 85:             if(++xxx > 0x2000)
   502   000D9C  0E01               	movlw	1
   503   000D9E  2615               	addwf	main@xxx^(0+1280),f,c
   504   000DA0  0E00               	movlw	0
   505   000DA2  2216               	addwfc	(main@xxx+1)^(0+1280),f,c
   506   000DA4  2217               	addwfc	(main@xxx+2)^(0+1280),f,c
   507   000DA6  2218               	addwfc	(main@xxx+3)^(0+1280),f,c
   508   000DA8  5018               	movf	(main@xxx+3)^(0+1280),w,c
   509   000DAA  1017               	iorwf	(main@xxx+2)^(0+1280),w,c
   510   000DAC  E10A               	bnz	u480
   511   000DAE  0415               	decf	main@xxx^(0+1280),w,c
   512   000DB0  0E20               	movlw	32
   513   000DB2  5816               	subwfb	(main@xxx+1)^(0+1280),w,c
   514   000DB4  A0D8               	btfss	status,0,c
   515   000DB6  EFDF  F006         	goto	u481
   516   000DBA  EFE1  F006         	goto	u480
   517   000DBE                     u481:
   518   000DBE  EFAC  F006         	goto	l1751
   519   000DC2                     u480:
   520   000DC2                     
   521                           ;main.c: 86:             {;main.c: 87:                 xxx = 0;
   522   000DC2  0E00               	movlw	0
   523   000DC4  6E15               	movwf	main@xxx^(0+1280),c
   524   000DC6  0E00               	movlw	0
   525   000DC8  6E16               	movwf	(main@xxx+1)^(0+1280),c
   526   000DCA  0E00               	movlw	0
   527   000DCC  6E17               	movwf	(main@xxx+2)^(0+1280),c
   528   000DCE  0E00               	movlw	0
   529   000DD0  6E18               	movwf	(main@xxx+3)^(0+1280),c
   530                           
   531                           ;main.c: 88:                 if(bShow == 0)
   532   000DD2  5019               	movf	main@bShow^(0+1280),w,c
   533   000DD4  A4D8               	btfss	status,2,c
   534   000DD6  EFEF  F006         	goto	u491
   535   000DDA  EFF1  F006         	goto	u490
   536   000DDE                     u491:
   537   000DDE  EF00  F007         	goto	l1771
   538   000DE2                     u490:
   539   000DE2                     
   540                           ;main.c: 89:                 {;main.c: 90:                     if(++light > 10)
   541   000DE2  2A1B               	incf	main@light^(0+1280),f,c
   542   000DE4  501B               	movf	main@light^(0+1280),w,c
   543   000DE6  0A80               	xorlw	128
   544   000DE8  0F75               	addlw	-139
   545   000DEA  A0D8               	btfss	status,0,c
   546   000DEC  EFFA  F006         	goto	u501
   547   000DF0  EFFC  F006         	goto	u500
   548   000DF4                     u501:
   549   000DF4  EF0F  F007         	goto	l577
   550   000DF8                     u500:
   551   000DF8                     
   552                           ;main.c: 91:                     {;main.c: 92:                         bShow = 1;
   553   000DF8  0E01               	movlw	1
   554   000DFA  6E19               	movwf	main@bShow^(0+1280),c
   555   000DFC  EFAC  F006         	goto	l1751
   556   000E00                     l1771:
   557                           
   558                           ;main.c: 96:                 {;main.c: 97:                     if(--light <= 0)
   559   000E00  061B               	decf	main@light^(0+1280),f,c
   560   000E02  501B               	movf	main@light^(0+1280),w,c
   561   000E04  0A80               	xorlw	128
   562   000E06  0F7F               	addlw	-129
   563   000E08  B0D8               	btfsc	status,0,c
   564   000E0A  EF09  F007         	goto	u511
   565   000E0E  EF0B  F007         	goto	u510
   566   000E12                     u511:
   567   000E12  EF0F  F007         	goto	l577
   568   000E16                     u510:
   569   000E16                     
   570                           ;main.c: 98:                     {;main.c: 99:                         bShow = 0;
   571   000E16  0E00               	movlw	0
   572   000E18  6E19               	movwf	main@bShow^(0+1280),c
   573   000E1A  EFAC  F006         	goto	l1751
   574   000E1E                     l577:
   575   000E1E  EFAC  F006         	goto	l1751
   576   000E22  EFFE  F03F         	goto	start
   577   000E26                     __end_of_main:
   578                           	callstack 0
   579                           
   580 ;; *************** function _SYSTEM_Initialize *****************
   581 ;; Defined at:
   582 ;;		line 41 in file "mcc_generated_files/system/src/system.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   596 ;;      Params:         0       0       0       0       0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used: 1
   602 ;; Hardware stack levels required when called: 2
   603 ;; This function calls:
   604 ;;		_CLOCK_Initialize
   605 ;;		_DAC1_Initialize
   606 ;;		_INTERRUPT_Initialize
   607 ;;		_PIN_MANAGER_Initialize
   608 ;;		_PWM1_16BIT_Initialize
   609 ;;		_PWM2_16BIT_Initialize
   610 ;;		_SPI1_Initialize
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text1
   617   000FD2                     __ptext1:
   618                           	callstack 0
   619   000FD2                     _SYSTEM_Initialize:
   620                           	callstack 124
   621   000FD2                     
   622                           ;mcc_generated_files/system/src/system.c: 43:     CLOCK_Initialize();
   623   000FD2  EC07  F008         	call	_CLOCK_Initialize	;wreg free
   624                           
   625                           ;mcc_generated_files/system/src/system.c: 44:     PIN_MANAGER_Initialize();
   626   000FD6  EC13  F007         	call	_PIN_MANAGER_Initialize	;wreg free
   627                           
   628                           ;mcc_generated_files/system/src/system.c: 45:     DAC1_Initialize();
   629   000FDA  EC15  F008         	call	_DAC1_Initialize	;wreg free
   630   000FDE                     
   631                           ;mcc_generated_files/system/src/system.c: 46:     PWM1_16BIT_Initialize();
   632   000FDE  EC99  F007         	call	_PWM1_16BIT_Initialize	;wreg free
   633   000FE2                     
   634                           ;mcc_generated_files/system/src/system.c: 47:     PWM2_16BIT_Initialize();
   635   000FE2  EC63  F007         	call	_PWM2_16BIT_Initialize	;wreg free
   636                           
   637                           ;mcc_generated_files/system/src/system.c: 48:     SPI1_Initialize();
   638   000FE6  ECF8  F007         	call	_SPI1_Initialize	;wreg free
   639   000FEA                     
   640                           ;mcc_generated_files/system/src/system.c: 49:     INTERRUPT_Initialize();
   641   000FEA  ECCF  F007         	call	_INTERRUPT_Initialize	;wreg free
   642   000FEE  0012               	return		;funcret
   643   000FF0                     __end_of_SYSTEM_Initialize:
   644                           	callstack 0
   645                           
   646 ;; *************** function _SPI1_Initialize *****************
   647 ;; Defined at:
   648 ;;		line 68 in file "mcc_generated_files/spi/src/spi1.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   662 ;;      Params:         0       0       0       0       0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0       0       0       0       0
   665 ;;      Totals:         0       0       0       0       0       0       0       0       0
   666 ;;Total ram usage:        0 bytes
   667 ;; Hardware stack levels used: 1
   668 ;; This function calls:
   669 ;;		Nothing
   670 ;; This function is called by:
   671 ;;		_SYSTEM_Initialize
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text2
   676   000FF0                     __ptext2:
   677                           	callstack 0
   678   000FF0                     _SPI1_Initialize:
   679                           	callstack 125
   680   000FF0                     
   681                           ;mcc_generated_files/spi/src/spi1.c: 71:     PIE3bits.SPI1IE = 0U;
   682   000FF0  94AB               	bcf	171,2,c	;volatile
   683                           
   684                           ;mcc_generated_files/spi/src/spi1.c: 72:     PIE3bits.SPI1TXIE = 0U;
   685   000FF2  92AB               	bcf	171,1,c	;volatile
   686                           
   687                           ;mcc_generated_files/spi/src/spi1.c: 73:     PIE3bits.SPI1RXIE = 0U;
   688   000FF4  90AB               	bcf	171,0,c	;volatile
   689   000FF6                     
   690                           ;mcc_generated_files/spi/src/spi1.c: 76:     SPI1CON0 = 0x00U;
   691   000FF6  0E00               	movlw	0
   692   000FF8  0100               	movlb	0	; () banked
   693   000FFA  6F84               	movwf	132,b	;volatile
   694                           
   695                           ;mcc_generated_files/spi/src/spi1.c: 77:     SPI1CON1 = 0x00U;
   696   000FFC  0E00               	movlw	0
   697   000FFE  6F85               	movwf	133,b	;volatile
   698                           
   699                           ;mcc_generated_files/spi/src/spi1.c: 78:     SPI1CON2 = 0x00U;
   700   001000  0E00               	movlw	0
   701   001002  6F86               	movwf	134,b	;volatile
   702                           
   703                           ;mcc_generated_files/spi/src/spi1.c: 79:     SPI1BAUD = 0x00U;
   704   001004  0E00               	movlw	0
   705   001006  6F89               	movwf	137,b	;volatile
   706                           
   707                           ;mcc_generated_files/spi/src/spi1.c: 80:     SPI1CLK = 0x00U;
   708   001008  0E00               	movlw	0
   709   00100A  6F8C               	movwf	140,b	;volatile
   710   00100C                     
   711                           ; BSR set to: 0
   712   00100C  0012               	return		;funcret
   713   00100E                     __end_of_SPI1_Initialize:
   714                           	callstack 0
   715                           
   716 ;; *************** function _PWM2_16BIT_Initialize *****************
   717 ;; Defined at:
   718 ;;		line 50 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   732 ;;      Params:         0       0       0       0       0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 1
   739 ;; This function calls:
   740 ;;		_PWM2_16BIT_Period_SetInterruptHandler
   741 ;;		_PWM2_16BIT_Slice1Output1_SetInterruptHandler
   742 ;;		_PWM2_16BIT_Slice1Output2_SetInterruptHandler
   743 ;; This function is called by:
   744 ;;		_SYSTEM_Initialize
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text3
   749   000EC6                     __ptext3:
   750                           	callstack 0
   751   000EC6                     _PWM2_16BIT_Initialize:
   752                           	callstack 124
   753   000EC6                     
   754                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 53:     PWM2ERS = 0x0;
   755   000EC6  0E00               	movlw	0
   756   000EC8  6E6F               	movwf	111,c	;volatile
   757                           
   758                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 56:     PWM2CLK = 0x2;
   759   000ECA  0E02               	movlw	2
   760   000ECC  6E70               	movwf	112,c	;volatile
   761                           
   762                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 59:     PWM2LDS = 0x0;
   763   000ECE  0E00               	movlw	0
   764   000ED0  6E71               	movwf	113,c	;volatile
   765   000ED2                     
   766                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 62:     PWM2PRL = 0xFF;
   767   000ED2  6872               	setf	114,c	;volatile
   768                           
   769                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 65:     PWM2PRH = 0xF9;
   770   000ED4  0EF9               	movlw	249
   771   000ED6  6E73               	movwf	115,c	;volatile
   772                           
   773                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 68:     PWM2CPRE = 0x0;
   774   000ED8  0E00               	movlw	0
   775   000EDA  6E74               	movwf	116,c	;volatile
   776                           
   777                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 71:     PWM2PIPOS = 0x0;
   778   000EDC  0E00               	movlw	0
   779   000EDE  6E75               	movwf	117,c	;volatile
   780                           
   781                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 74:     PWM2GIR = 0x0;
   782   000EE0  0E00               	movlw	0
   783   000EE2  6E76               	movwf	118,c	;volatile
   784                           
   785                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 77:     PWM2GIE = 0x0;
   786   000EE4  0E00               	movlw	0
   787   000EE6  6E77               	movwf	119,c	;volatile
   788                           
   789                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 80:     PWM2S1CFG = 0x0;
   790   000EE8  0E00               	movlw	0
   791   000EEA  6E79               	movwf	121,c	;volatile
   792                           
   793                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 83:     PWM2S1P1L = 0x0;
   794   000EEC  0E00               	movlw	0
   795   000EEE  6E7A               	movwf	122,c	;volatile
   796                           
   797                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 86:     PWM2S1P1H = 0x7D;
   798   000EF0  0E7D               	movlw	125
   799   000EF2  6E7B               	movwf	123,c	;volatile
   800                           
   801                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 89:     PWM2S1P2L = 0x0;
   802   000EF4  0E00               	movlw	0
   803   000EF6  6E7C               	movwf	124,c	;volatile
   804                           
   805                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 92:     PWM2S1P2H = 0x7D;
   806   000EF8  0E7D               	movlw	125
   807   000EFA  6E7D               	movwf	125,c	;volatile
   808   000EFC                     
   809                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 95:     PIR5bits.PWM2PIF = 0;
   810   000EFC  9CB8               	bcf	184,6,c	;volatile
   811   000EFE                     
   812                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 98:     PIR5bits.PWM2IF = 0;
   813   000EFE  9EB8               	bcf	184,7,c	;volatile
   814   000F00                     
   815                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 101:     PWM2GIRbits.S1P1IF = 0;
   816   000F00  9076               	bcf	118,0,c	;volatile
   817   000F02                     
   818                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 104:     PWM2GIRbits.S1P2IF = 0;
   819   000F02  9276               	bcf	118,1,c	;volatile
   820   000F04                     
   821                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 107:     PIE5bits.PWM2IE = 0;
   822   000F04  9EAD               	bcf	173,7,c	;volatile
   823   000F06                     
   824                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 110:     PIE5bits.PWM2PIE = 0;
   825   000F06  9CAD               	bcf	173,6,c	;volatile
   826   000F08                     
   827                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 113:     PWM2_16BIT_Slice1Output1_SetInterrup
      +                          tHandler(PWM2_16BIT_Slice1Output1_DefaultInterruptHandler);
   828   000F08  0E00               	movlw	0
   829   000F0A  6E13               	movwf	PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler^(0+1280),c
   830   000F0C  0E00               	movlw	0
   831   000F0E  6E14               	movwf	(PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   832   000F10  EC25  F008         	call	_PWM2_16BIT_Slice1Output1_SetInterruptHandler	;wreg free
   833   000F14                     
   834                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 114:     PWM2_16BIT_Slice1Output2_SetInterrup
      +                          tHandler(PWM2_16BIT_Slice1Output2_DefaultInterruptHandler);
   835   000F14  0E00               	movlw	0
   836   000F16  6E13               	movwf	PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler^(0+1280),c
   837   000F18  0E00               	movlw	0
   838   000F1A  6E14               	movwf	(PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   839   000F1C  EC20  F008         	call	_PWM2_16BIT_Slice1Output2_SetInterruptHandler	;wreg free
   840   000F20                     
   841                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 115:     PWM2_16BIT_Period_SetInterruptHandle
      +                          r(PWM2_16BIT_Period_DefaultInterruptHandler);
   842   000F20  0E00               	movlw	0
   843   000F22  6E13               	movwf	PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler^(0+1280),c
   844   000F24  0E00               	movlw	0
   845   000F26  6E14               	movwf	(PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
   846   000F28  EC2A  F008         	call	_PWM2_16BIT_Period_SetInterruptHandler	;wreg free
   847   000F2C                     
   848                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 118:     PWM2CON = 0x80;
   849   000F2C  0E80               	movlw	128
   850   000F2E  6E78               	movwf	120,c	;volatile
   851   000F30  0012               	return		;funcret
   852   000F32                     __end_of_PWM2_16BIT_Initialize:
   853                           	callstack 0
   854                           
   855 ;; *************** function _PWM2_16BIT_Slice1Output2_SetInterruptHandler *****************
   856 ;; Defined at:
   857 ;;		line 194 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   860 ;;		 -> PWM2_16BIT_Slice1Output2_DefaultInterruptHandler(1), 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2, status,0
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   872 ;;      Params:         2       0       0       0       0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0
   875 ;;      Totals:         2       0       0       0       0       0       0       0       0
   876 ;;Total ram usage:        2 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_PWM2_16BIT_Initialize
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text4
   886   001040                     __ptext4:
   887                           	callstack 0
   888   001040                     _PWM2_16BIT_Slice1Output2_SetInterruptHandler:
   889                           	callstack 124
   890   001040                     
   891                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 194: void PWM2_16BIT_Slice1Output2_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm2_16bit.c: 195
      +                          : {;mcc_generated_files/pwm/src/pwm2_16bit.c: 196:     PWM2_16BIT_Slice1Output2_Interrup
      +                          tHandler = InterruptHandler;
   892   001040  C513  F509         	movff	PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler,_PWM2_16BIT_Slice1O
      +                          utput2_InterruptHandler
   893   001044  C514  F50A         	movff	PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1,_PWM2_16BIT_Slice
      +                          1Output2_InterruptHandler+1
   894   001048  0012               	return		;funcret
   895   00104A                     __end_of_PWM2_16BIT_Slice1Output2_SetInterruptHandler:
   896                           	callstack 0
   897                           
   898 ;; *************** function _PWM2_16BIT_Slice1Output1_SetInterruptHandler *****************
   899 ;; Defined at:
   900 ;;		line 189 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   903 ;;		 -> PWM2_16BIT_Slice1Output1_DefaultInterruptHandler(1), 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   915 ;;      Params:         2       0       0       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0
   918 ;;      Totals:         2       0       0       0       0       0       0       0       0
   919 ;;Total ram usage:        2 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_PWM2_16BIT_Initialize
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text5
   929   00104A                     __ptext5:
   930                           	callstack 0
   931   00104A                     _PWM2_16BIT_Slice1Output1_SetInterruptHandler:
   932                           	callstack 124
   933   00104A                     
   934                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 189: void PWM2_16BIT_Slice1Output1_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm2_16bit.c: 190
      +                          : {;mcc_generated_files/pwm/src/pwm2_16bit.c: 191:     PWM2_16BIT_Slice1Output1_Interrup
      +                          tHandler = InterruptHandler;
   935   00104A  C513  F50B         	movff	PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler,_PWM2_16BIT_Slice1O
      +                          utput1_InterruptHandler
   936   00104E  C514  F50C         	movff	PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1,_PWM2_16BIT_Slice
      +                          1Output1_InterruptHandler+1
   937   001052  0012               	return		;funcret
   938   001054                     __end_of_PWM2_16BIT_Slice1Output1_SetInterruptHandler:
   939                           	callstack 0
   940                           
   941 ;; *************** function _PWM2_16BIT_Period_SetInterruptHandler *****************
   942 ;; Defined at:
   943 ;;		line 199 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
   946 ;;		 -> PWM2_16BIT_Period_DefaultInterruptHandler(1), 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
   958 ;;      Params:         2       0       0       0       0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0
   961 ;;      Totals:         2       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:        2 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_PWM2_16BIT_Initialize
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text6
   972   001054                     __ptext6:
   973                           	callstack 0
   974   001054                     _PWM2_16BIT_Period_SetInterruptHandler:
   975                           	callstack 124
   976   001054                     
   977                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 199: void PWM2_16BIT_Period_SetInterruptHandl
      +                          er(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm2_16bit.c: 200: {;mcc
      +                          _generated_files/pwm/src/pwm2_16bit.c: 201:     PWM2_16BIT_Period_InterruptHandler = Int
      +                          erruptHandler;
   978   001054  C513  F507         	movff	PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler,_PWM2_16BIT_Period_Interru
      +                          ptHandler
   979   001058  C514  F508         	movff	PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler+1,_PWM2_16BIT_Period_Inter
      +                          ruptHandler+1
   980   00105C  0012               	return		;funcret
   981   00105E                     __end_of_PWM2_16BIT_Period_SetInterruptHandler:
   982                           	callstack 0
   983                           
   984 ;; *************** function _PWM1_16BIT_Initialize *****************
   985 ;; Defined at:
   986 ;;		line 50 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1000 ;;      Params:         0       0       0       0       0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used: 1
  1006 ;; Hardware stack levels required when called: 1
  1007 ;; This function calls:
  1008 ;;		_PWM1_16BIT_Period_SetInterruptHandler
  1009 ;;		_PWM1_16BIT_Slice1Output1_SetInterruptHandler
  1010 ;;		_PWM1_16BIT_Slice1Output2_SetInterruptHandler
  1011 ;; This function is called by:
  1012 ;;		_SYSTEM_Initialize
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           
  1016                           	psect	text7
  1017   000F32                     __ptext7:
  1018                           	callstack 0
  1019   000F32                     _PWM1_16BIT_Initialize:
  1020                           	callstack 124
  1021   000F32                     
  1022                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 53:     PWM1ERS = 0x0;
  1023   000F32  0E00               	movlw	0
  1024   000F34  6E60               	movwf	96,c	;volatile
  1025                           
  1026                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 56:     PWM1CLK = 0x2;
  1027   000F36  0E02               	movlw	2
  1028   000F38  6E61               	movwf	97,c	;volatile
  1029                           
  1030                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 59:     PWM1LDS = 0x0;
  1031   000F3A  0E00               	movlw	0
  1032   000F3C  6E62               	movwf	98,c	;volatile
  1033   000F3E                     
  1034                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 62:     PWM1PRL = 0xFF;
  1035   000F3E  6863               	setf	99,c	;volatile
  1036                           
  1037                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 65:     PWM1PRH = 0xF9;
  1038   000F40  0EF9               	movlw	249
  1039   000F42  6E64               	movwf	100,c	;volatile
  1040                           
  1041                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 68:     PWM1CPRE = 0x0;
  1042   000F44  0E00               	movlw	0
  1043   000F46  6E65               	movwf	101,c	;volatile
  1044                           
  1045                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 71:     PWM1PIPOS = 0x0;
  1046   000F48  0E00               	movlw	0
  1047   000F4A  6E66               	movwf	102,c	;volatile
  1048                           
  1049                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 74:     PWM1GIR = 0x0;
  1050   000F4C  0E00               	movlw	0
  1051   000F4E  6E67               	movwf	103,c	;volatile
  1052                           
  1053                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 77:     PWM1GIE = 0x0;
  1054   000F50  0E00               	movlw	0
  1055   000F52  6E68               	movwf	104,c	;volatile
  1056                           
  1057                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 80:     PWM1S1CFG = 0x0;
  1058   000F54  0E00               	movlw	0
  1059   000F56  6E6A               	movwf	106,c	;volatile
  1060                           
  1061                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 83:     PWM1S1P1L = 0x0;
  1062   000F58  0E00               	movlw	0
  1063   000F5A  6E6B               	movwf	107,c	;volatile
  1064                           
  1065                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 86:     PWM1S1P1H = 0x7D;
  1066   000F5C  0E7D               	movlw	125
  1067   000F5E  6E6C               	movwf	108,c	;volatile
  1068                           
  1069                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 89:     PWM1S1P2L = 0x0;
  1070   000F60  0E00               	movlw	0
  1071   000F62  6E6D               	movwf	109,c	;volatile
  1072                           
  1073                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 92:     PWM1S1P2H = 0x7D;
  1074   000F64  0E7D               	movlw	125
  1075   000F66  6E6E               	movwf	110,c	;volatile
  1076   000F68                     
  1077                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 95:     PIR4bits.PWM1PIF = 0;
  1078   000F68  9CB7               	bcf	183,6,c	;volatile
  1079   000F6A                     
  1080                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 98:     PIR4bits.PWM1IF = 0;
  1081   000F6A  9EB7               	bcf	183,7,c	;volatile
  1082   000F6C                     
  1083                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 101:     PWM1GIRbits.S1P1IF = 0;
  1084   000F6C  9067               	bcf	103,0,c	;volatile
  1085   000F6E                     
  1086                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 104:     PWM1GIRbits.S1P2IF = 0;
  1087   000F6E  9267               	bcf	103,1,c	;volatile
  1088   000F70                     
  1089                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 107:     PIE4bits.PWM1IE = 0;
  1090   000F70  9EAC               	bcf	172,7,c	;volatile
  1091   000F72                     
  1092                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 110:     PIE4bits.PWM1PIE = 0;
  1093   000F72  9CAC               	bcf	172,6,c	;volatile
  1094   000F74                     
  1095                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 113:     PWM1_16BIT_Slice1Output1_SetInterrup
      +                          tHandler(PWM1_16BIT_Slice1Output1_DefaultInterruptHandler);
  1096   000F74  0E00               	movlw	0
  1097   000F76  6E13               	movwf	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler^(0+1280),c
  1098   000F78  0E00               	movlw	0
  1099   000F7A  6E14               	movwf	(PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1100   000F7C  EC34  F008         	call	_PWM1_16BIT_Slice1Output1_SetInterruptHandler	;wreg free
  1101   000F80                     
  1102                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 114:     PWM1_16BIT_Slice1Output2_SetInterrup
      +                          tHandler(PWM1_16BIT_Slice1Output2_DefaultInterruptHandler);
  1103   000F80  0E00               	movlw	0
  1104   000F82  6E13               	movwf	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler^(0+1280),c
  1105   000F84  0E00               	movlw	0
  1106   000F86  6E14               	movwf	(PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1107   000F88  EC2F  F008         	call	_PWM1_16BIT_Slice1Output2_SetInterruptHandler	;wreg free
  1108   000F8C                     
  1109                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 115:     PWM1_16BIT_Period_SetInterruptHandle
      +                          r(PWM1_16BIT_Period_DefaultInterruptHandler);
  1110   000F8C  0E00               	movlw	0
  1111   000F8E  6E13               	movwf	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler^(0+1280),c
  1112   000F90  0E00               	movlw	0
  1113   000F92  6E14               	movwf	(PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1114   000F94  EC39  F008         	call	_PWM1_16BIT_Period_SetInterruptHandler	;wreg free
  1115   000F98                     
  1116                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 118:     PWM1CON = 0x80;
  1117   000F98  0E80               	movlw	128
  1118   000F9A  6E69               	movwf	105,c	;volatile
  1119   000F9C  0012               	return		;funcret
  1120   000F9E                     __end_of_PWM1_16BIT_Initialize:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function _PWM1_16BIT_Slice1Output2_SetInterruptHandler *****************
  1124 ;; Defined at:
  1125 ;;		line 194 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1128 ;;		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(1), 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1140 ;;      Params:         2       0       0       0       0       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1143 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_PWM1_16BIT_Initialize
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text8
  1154   00105E                     __ptext8:
  1155                           	callstack 0
  1156   00105E                     _PWM1_16BIT_Slice1Output2_SetInterruptHandler:
  1157                           	callstack 124
  1158   00105E                     
  1159                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 194: void PWM1_16BIT_Slice1Output2_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 195
      +                          : {;mcc_generated_files/pwm/src/pwm1_16bit.c: 196:     PWM1_16BIT_Slice1Output2_Interrup
      +                          tHandler = InterruptHandler;
  1160   00105E  C513  F50F         	movff	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Slice1O
      +                          utput2_InterruptHandler
  1161   001062  C514  F510         	movff	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Slice
      +                          1Output2_InterruptHandler+1
  1162   001066  0012               	return		;funcret
  1163   001068                     __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _PWM1_16BIT_Slice1Output1_SetInterruptHandler *****************
  1167 ;; Defined at:
  1168 ;;		line 189 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1171 ;;		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(1), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1183 ;;      Params:         2       0       0       0       0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1186 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1187 ;;Total ram usage:        2 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_PWM1_16BIT_Initialize
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text9
  1197   001068                     __ptext9:
  1198                           	callstack 0
  1199   001068                     _PWM1_16BIT_Slice1Output1_SetInterruptHandler:
  1200                           	callstack 124
  1201   001068                     
  1202                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 189: void PWM1_16BIT_Slice1Output1_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 190
      +                          : {;mcc_generated_files/pwm/src/pwm1_16bit.c: 191:     PWM1_16BIT_Slice1Output1_Interrup
      +                          tHandler = InterruptHandler;
  1203   001068  C513  F511         	movff	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Slice1O
      +                          utput1_InterruptHandler
  1204   00106C  C514  F512         	movff	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Slice
      +                          1Output1_InterruptHandler+1
  1205   001070  0012               	return		;funcret
  1206   001072                     __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _PWM1_16BIT_Period_SetInterruptHandler *****************
  1210 ;; Defined at:
  1211 ;;		line 199 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1214 ;;		 -> PWM1_16BIT_Period_DefaultInterruptHandler(1), 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1226 ;;      Params:         2       0       0       0       0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1229 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1230 ;;Total ram usage:        2 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_PWM1_16BIT_Initialize
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text10
  1240   001072                     __ptext10:
  1241                           	callstack 0
  1242   001072                     _PWM1_16BIT_Period_SetInterruptHandler:
  1243                           	callstack 124
  1244   001072                     
  1245                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 199: void PWM1_16BIT_Period_SetInterruptHandl
      +                          er(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 200: {;mcc
      +                          _generated_files/pwm/src/pwm1_16bit.c: 201:     PWM1_16BIT_Period_InterruptHandler = Int
      +                          erruptHandler;
  1246   001072  C513  F50D         	movff	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Period_Interru
      +                          ptHandler
  1247   001076  C514  F50E         	movff	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Period_Inter
      +                          ruptHandler+1
  1248   00107A  0012               	return		;funcret
  1249   00107C                     __end_of_PWM1_16BIT_Period_SetInterruptHandler:
  1250                           	callstack 0
  1251                           
  1252 ;; *************** function _PIN_MANAGER_Initialize *****************
  1253 ;; Defined at:
  1254 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0
  1269 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1271 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1272 ;;Total ram usage:        0 bytes
  1273 ;; Hardware stack levels used: 1
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_SYSTEM_Initialize
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text11
  1282   000E26                     __ptext11:
  1283                           	callstack 0
  1284   000E26                     _PIN_MANAGER_Initialize:
  1285                           	callstack 125
  1286   000E26                     
  1287                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
  1288   000E26  0E00               	movlw	0
  1289   000E28  6EBE               	movwf	190,c	;volatile
  1290                           
  1291                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  1292   000E2A  0E00               	movlw	0
  1293   000E2C  6EBF               	movwf	191,c	;volatile
  1294                           
  1295                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
  1296   000E2E  0E00               	movlw	0
  1297   000E30  6EC0               	movwf	192,c	;volatile
  1298                           
  1299                           ;mcc_generated_files/system/src/pins.c: 49:     ODCONA = 0x0;
  1300   000E32  0E00               	movlw	0
  1301   000E34  0104               	movlb	4	; () banked
  1302   000E36  6F02               	movwf	2,b	;volatile
  1303                           
  1304                           ;mcc_generated_files/system/src/pins.c: 50:     ODCONB = 0x0;
  1305   000E38  0E00               	movlw	0
  1306   000E3A  6F0A               	movwf	10,b	;volatile
  1307                           
  1308                           ;mcc_generated_files/system/src/pins.c: 51:     ODCONC = 0x0;
  1309   000E3C  0E00               	movlw	0
  1310   000E3E  6F12               	movwf	18,b	;volatile
  1311                           
  1312                           ;mcc_generated_files/system/src/pins.c: 56:     TRISA = 0xB;
  1313   000E40  0E0B               	movlw	11
  1314   000E42  6EC6               	movwf	198,c	;volatile
  1315                           
  1316                           ;mcc_generated_files/system/src/pins.c: 57:     TRISB = 0x60;
  1317   000E44  0E60               	movlw	96
  1318   000E46  6EC7               	movwf	199,c	;volatile
  1319                           
  1320                           ;mcc_generated_files/system/src/pins.c: 58:     TRISC = 0xDB;
  1321   000E48  0EDB               	movlw	219
  1322   000E4A  6EC8               	movwf	200,c	;volatile
  1323                           
  1324                           ;mcc_generated_files/system/src/pins.c: 63:     ANSELA = 0x37;
  1325   000E4C  0E37               	movlw	55
  1326   000E4E  6F00               	movwf	0,b	;volatile
  1327                           
  1328                           ;mcc_generated_files/system/src/pins.c: 64:     ANSELB = 0x0;
  1329   000E50  0E00               	movlw	0
  1330   000E52  6F08               	movwf	8,b	;volatile
  1331                           
  1332                           ;mcc_generated_files/system/src/pins.c: 65:     ANSELC = 0xF8;
  1333   000E54  0EF8               	movlw	248
  1334   000E56  6F10               	movwf	16,b	;volatile
  1335                           
  1336                           ;mcc_generated_files/system/src/pins.c: 70:     WPUA = 0x0;
  1337   000E58  0E00               	movlw	0
  1338   000E5A  6F01               	movwf	1,b	;volatile
  1339                           
  1340                           ;mcc_generated_files/system/src/pins.c: 71:     WPUB = 0x0;
  1341   000E5C  0E00               	movlw	0
  1342   000E5E  6F09               	movwf	9,b	;volatile
  1343                           
  1344                           ;mcc_generated_files/system/src/pins.c: 72:     WPUC = 0x0;
  1345   000E60  0E00               	movlw	0
  1346   000E62  6F11               	movwf	17,b	;volatile
  1347                           
  1348                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
  1349   000E64  0E37               	movlw	55
  1350   000E66  6F03               	movwf	3,b	;volatile
  1351                           
  1352                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
  1353   000E68  0EF0               	movlw	240
  1354   000E6A  6F0B               	movwf	11,b	;volatile
  1355   000E6C                     
  1356                           ; BSR set to: 4
  1357                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
  1358   000E6C  6913               	setf	19,b	;volatile
  1359                           
  1360                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  1361   000E6E  0E3F               	movlw	63
  1362   000E70  6F04               	movwf	4,b	;volatile
  1363                           
  1364                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  1365   000E72  0EF0               	movlw	240
  1366   000E74  6F0C               	movwf	12,b	;volatile
  1367   000E76                     
  1368                           ; BSR set to: 4
  1369                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  1370   000E76  6914               	setf	20,b	;volatile
  1371                           
  1372                           ;mcc_generated_files/system/src/pins.c: 92:     RB4I2C = 0x0;
  1373   000E78  0E00               	movlw	0
  1374   000E7A  0102               	movlb	2	; () banked
  1375   000E7C  6F87               	movwf	135,b	;volatile
  1376                           
  1377                           ;mcc_generated_files/system/src/pins.c: 93:     RB6I2C = 0x0;
  1378   000E7E  0E00               	movlw	0
  1379   000E80  6F86               	movwf	134,b	;volatile
  1380                           
  1381                           ;mcc_generated_files/system/src/pins.c: 97:     SPI1SDIPPS = 0xE;
  1382   000E82  0E0E               	movlw	14
  1383   000E84  6F6B               	movwf	107,b	;volatile
  1384                           
  1385                           ;mcc_generated_files/system/src/pins.c: 98:     RB4PPS = 0x1C;
  1386   000E86  0E1C               	movlw	28
  1387   000E88  6F0D               	movwf	13,b	;volatile
  1388                           
  1389                           ;mcc_generated_files/system/src/pins.c: 99:     RA4PPS = 0x0C;
  1390   000E8A  0E0C               	movlw	12
  1391   000E8C  6F05               	movwf	5,b	;volatile
  1392                           
  1393                           ;mcc_generated_files/system/src/pins.c: 100:     RA5PPS = 0x0D;
  1394   000E8E  0E0D               	movlw	13
  1395   000E90  6F06               	movwf	6,b	;volatile
  1396                           
  1397                           ;mcc_generated_files/system/src/pins.c: 101:     RC5PPS = 0x0A;
  1398   000E92  0E0A               	movlw	10
  1399   000E94  6F16               	movwf	22,b	;volatile
  1400                           
  1401                           ;mcc_generated_files/system/src/pins.c: 102:     SPI1SCKPPS = 0xD;
  1402   000E96  0E0D               	movlw	13
  1403   000E98  6F6A               	movwf	106,b	;volatile
  1404                           
  1405                           ;mcc_generated_files/system/src/pins.c: 103:     RB5PPS = 0x1B;
  1406   000E9A  0E1B               	movlw	27
  1407   000E9C  6F0E               	movwf	14,b	;volatile
  1408                           
  1409                           ;mcc_generated_files/system/src/pins.c: 108:     IOCAP = 0x0;
  1410   000E9E  0E00               	movlw	0
  1411   000EA0  0104               	movlb	4	; () banked
  1412   000EA2  6F05               	movwf	5,b	;volatile
  1413                           
  1414                           ;mcc_generated_files/system/src/pins.c: 109:     IOCAN = 0x0;
  1415   000EA4  0E00               	movlw	0
  1416   000EA6  6F06               	movwf	6,b	;volatile
  1417                           
  1418                           ;mcc_generated_files/system/src/pins.c: 110:     IOCAF = 0x0;
  1419   000EA8  0E00               	movlw	0
  1420   000EAA  6F07               	movwf	7,b	;volatile
  1421                           
  1422                           ;mcc_generated_files/system/src/pins.c: 111:     IOCBP = 0x0;
  1423   000EAC  0E00               	movlw	0
  1424   000EAE  6F0D               	movwf	13,b	;volatile
  1425                           
  1426                           ;mcc_generated_files/system/src/pins.c: 112:     IOCBN = 0x0;
  1427   000EB0  0E00               	movlw	0
  1428   000EB2  6F0E               	movwf	14,b	;volatile
  1429                           
  1430                           ;mcc_generated_files/system/src/pins.c: 113:     IOCBF = 0x0;
  1431   000EB4  0E00               	movlw	0
  1432   000EB6  6F0F               	movwf	15,b	;volatile
  1433                           
  1434                           ;mcc_generated_files/system/src/pins.c: 114:     IOCCP = 0x0;
  1435   000EB8  0E00               	movlw	0
  1436   000EBA  6F15               	movwf	21,b	;volatile
  1437                           
  1438                           ;mcc_generated_files/system/src/pins.c: 115:     IOCCN = 0x0;
  1439   000EBC  0E00               	movlw	0
  1440   000EBE  6F16               	movwf	22,b	;volatile
  1441                           
  1442                           ;mcc_generated_files/system/src/pins.c: 116:     IOCCF = 0x0;
  1443   000EC0  0E00               	movlw	0
  1444   000EC2  6F17               	movwf	23,b	;volatile
  1445   000EC4                     
  1446                           ; BSR set to: 4
  1447   000EC4  0012               	return		;funcret
  1448   000EC6                     __end_of_PIN_MANAGER_Initialize:
  1449                           	callstack 0
  1450                           
  1451 ;; *************** function _INTERRUPT_Initialize *****************
  1452 ;; Defined at:
  1453 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1467 ;;      Params:         0       0       0       0       0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1470 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1471 ;;Total ram usage:        0 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 1
  1474 ;; This function calls:
  1475 ;;		_INT0_SetInterruptHandler
  1476 ;;		_INT1_SetInterruptHandler
  1477 ;;		_INT2_SetInterruptHandler
  1478 ;; This function is called by:
  1479 ;;		_SYSTEM_Initialize
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text12
  1484   000F9E                     __ptext12:
  1485                           	callstack 0
  1486   000F9E                     _INTERRUPT_Initialize:
  1487                           	callstack 124
  1488   000F9E                     
  1489                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
  1490   000F9E  9AD6               	bcf	214,5,c	;volatile
  1491                           
  1492                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
  1493   000FA0  90B4               	bcf	180,0,c	;volatile
  1494                           
  1495                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
  1496   000FA2  80D6               	bsf	214,0,c	;volatile
  1497   000FA4                     
  1498                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  1499   000FA4  0E00               	movlw	0
  1500   000FA6  6E13               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
  1501   000FA8  0E00               	movlw	0
  1502   000FAA  6E14               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1503   000FAC  EC48  F008         	call	_INT0_SetInterruptHandler	;wreg free
  1504   000FB0                     
  1505                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
  1506   000FB0  90B9               	bcf	185,0,c	;volatile
  1507   000FB2                     
  1508                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
  1509   000FB2  82D6               	bsf	214,1,c	;volatile
  1510                           
  1511                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  1512   000FB4  0E00               	movlw	0
  1513   000FB6  6E13               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
  1514   000FB8  0E00               	movlw	0
  1515   000FBA  6E14               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1516   000FBC  EC43  F008         	call	_INT1_SetInterruptHandler	;wreg free
  1517   000FC0                     
  1518                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
  1519   000FC0  90BD               	bcf	189,0,c	;volatile
  1520   000FC2                     
  1521                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
  1522   000FC2  84D6               	bsf	214,2,c	;volatile
  1523                           
  1524                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  1525   000FC4  0E00               	movlw	0
  1526   000FC6  6E13               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
  1527   000FC8  0E00               	movlw	0
  1528   000FCA  6E14               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1529   000FCC  EC3E  F008         	call	_INT2_SetInterruptHandler	;wreg free
  1530   000FD0  0012               	return		;funcret
  1531   000FD2                     __end_of_INTERRUPT_Initialize:
  1532                           	callstack 0
  1533                           
  1534 ;; *************** function _INT2_SetInterruptHandler *****************
  1535 ;; Defined at:
  1536 ;;		line 144 in file "mcc_generated_files/system/src/interrupt.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1539 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1551 ;;      Params:         2       0       0       0       0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1554 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1555 ;;Total ram usage:        2 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_INTERRUPT_Initialize
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text13
  1565   00107C                     __ptext13:
  1566                           	callstack 0
  1567   00107C                     _INT2_SetInterruptHandler:
  1568                           	callstack 124
  1569   00107C                     
  1570                           ;mcc_generated_files/system/src/interrupt.c: 145:     INT2_InterruptHandler = InterruptH
      +                          andler;
  1571   00107C  C513  F501         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  1572   001080  C514  F502         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  1573   001084  0012               	return		;funcret
  1574   001086                     __end_of_INT2_SetInterruptHandler:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _INT1_SetInterruptHandler *****************
  1578 ;; Defined at:
  1579 ;;		line 118 in file "mcc_generated_files/system/src/interrupt.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1582 ;;		 -> INT1_DefaultInterruptHandler(1), 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1594 ;;      Params:         2       0       0       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1597 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1598 ;;Total ram usage:        2 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_INTERRUPT_Initialize
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text14
  1608   001086                     __ptext14:
  1609                           	callstack 0
  1610   001086                     _INT1_SetInterruptHandler:
  1611                           	callstack 124
  1612   001086                     
  1613                           ;mcc_generated_files/system/src/interrupt.c: 119:     INT1_InterruptHandler = InterruptH
      +                          andler;
  1614   001086  C513  F503         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  1615   00108A  C514  F504         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  1616   00108E  0012               	return		;funcret
  1617   001090                     __end_of_INT1_SetInterruptHandler:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _INT0_SetInterruptHandler *****************
  1621 ;; Defined at:
  1622 ;;		line 92 in file "mcc_generated_files/system/src/interrupt.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  InterruptHan    2    0[COMRAM] PTR FTN()void 
  1625 ;;		 -> INT0_DefaultInterruptHandler(1), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  1    wreg      void 
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1637 ;;      Params:         2       0       0       0       0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1640 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1641 ;;Total ram usage:        2 bytes
  1642 ;; Hardware stack levels used: 1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_INTERRUPT_Initialize
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text15
  1651   001090                     __ptext15:
  1652                           	callstack 0
  1653   001090                     _INT0_SetInterruptHandler:
  1654                           	callstack 124
  1655   001090                     
  1656                           ;mcc_generated_files/system/src/interrupt.c: 93:     INT0_InterruptHandler = InterruptHa
      +                          ndler;
  1657   001090  C513  F505         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  1658   001094  C514  F506         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  1659   001098  0012               	return		;funcret
  1660   00109A                     __end_of_INT0_SetInterruptHandler:
  1661                           	callstack 0
  1662                           
  1663 ;; *************** function _DAC1_Initialize *****************
  1664 ;; Defined at:
  1665 ;;		line 44 in file "mcc_generated_files/dac/src/dac1.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1679 ;;      Params:         0       0       0       0       0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1682 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1683 ;;Total ram usage:        0 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_SYSTEM_Initialize
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text16
  1693   00102A                     __ptext16:
  1694                           	callstack 0
  1695   00102A                     _DAC1_Initialize:
  1696                           	callstack 125
  1697   00102A                     
  1698                           ;mcc_generated_files/dac/src/dac1.c: 47:     DAC1CON = 160;
  1699   00102A  0EA0               	movlw	160
  1700   00102C  0100               	movlb	0	; () banked
  1701   00102E  6F7F               	movwf	127,b	;volatile
  1702                           
  1703                           ;mcc_generated_files/dac/src/dac1.c: 50:     DAC1DATL = 51;
  1704   001030  0E33               	movlw	51
  1705   001032  6F7D               	movwf	125,b	;volatile
  1706   001034                     
  1707                           ; BSR set to: 0
  1708   001034  0012               	return		;funcret
  1709   001036                     __end_of_DAC1_Initialize:
  1710                           	callstack 0
  1711                           
  1712 ;; *************** function _CLOCK_Initialize *****************
  1713 ;; Defined at:
  1714 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;		None
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;		None
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0
  1729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1731 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1732 ;;Total ram usage:        0 bytes
  1733 ;; Hardware stack levels used: 1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_SYSTEM_Initialize
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text17
  1742   00100E                     __ptext17:
  1743                           	callstack 0
  1744   00100E                     _CLOCK_Initialize:
  1745                           	callstack 125
  1746   00100E                     
  1747                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
  1748   00100E  0E60               	movlw	96
  1749   001010  0100               	movlb	0	; () banked
  1750   001012  6FAD               	movwf	173,b	;volatile
  1751                           
  1752                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
  1753   001014  0E00               	movlw	0
  1754   001016  6FAF               	movwf	175,b	;volatile
  1755                           
  1756                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
  1757   001018  0E00               	movlw	0
  1758   00101A  6FB3               	movwf	179,b	;volatile
  1759                           
  1760                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
  1761   00101C  0E08               	movlw	8
  1762   00101E  6FB1               	movwf	177,b	;volatile
  1763                           
  1764                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
  1765   001020  0E00               	movlw	0
  1766   001022  6FB0               	movwf	176,b	;volatile
  1767                           
  1768                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
  1769   001024  0E00               	movlw	0
  1770   001026  6FAC               	movwf	172,b	;volatile
  1771   001028                     
  1772                           ; BSR set to: 0
  1773   001028  0012               	return		;funcret
  1774   00102A                     __end_of_CLOCK_Initialize:
  1775                           	callstack 0
  1776                           
  1777                           	psect	rparam
  1778   000000                     
  1779                           	psect	config
  1780                           
  1781                           ;Config register CONFIG1 @ 0x300000
  1782                           ;	External Oscillator Selection
  1783                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  1784                           ;	Reset Oscillator Selection
  1785                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  1786   300000                     	org	3145728
  1787   300000  8F                 	db	143
  1788                           
  1789                           ;Config register CONFIG2 @ 0x300001
  1790                           ;	Clock out Enable bit
  1791                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1792                           ;	PRLOCKED One-Way Set Enable bit
  1793                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1794                           ;	Clock Switch Enable bit
  1795                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1796                           ;	Fail-Safe Clock Monitor Enable bit
  1797                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1798                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
  1799                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
  1800                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
  1801                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
  1802   300001                     	org	3145729
  1803   300001  FF                 	db	255
  1804                           
  1805                           ;Config register CONFIG3 @ 0x300002
  1806                           ;	MCLR Enable bit
  1807                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1808                           ;	Power-up timer selection bits
  1809                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1810                           ;	Multi-vector enable bit
  1811                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  1812                           ;	IVTLOCK bit One-way set enable bit
  1813                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1814                           ;	Low Power BOR Enable bit
  1815                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1816                           ;	Brown-out Reset Enable bits
  1817                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1818   300002                     	org	3145730
  1819   300002  F7                 	db	247
  1820                           
  1821                           ;Config register CONFIG4 @ 0x300003
  1822                           ;	Brown-out Reset Voltage Selection bits
  1823                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1824                           ;	ZCD Disable bit
  1825                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1826                           ;	PPSLOCK bit One-Way Set Enable bit
  1827                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1828                           ;	Stack Full/Underflow Reset Enable bit
  1829                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1830                           ;	Low Voltage Programming Enable bit
  1831                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1832                           ;	Extended Instruction Set Enable bit
  1833                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1834   300003                     	org	3145731
  1835   300003  FF                 	db	255
  1836                           
  1837                           ;Config register CONFIG5 @ 0x300004
  1838                           ;	WDT Period selection bits
  1839                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1840                           ;	WDT operating mode
  1841                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1842   300004                     	org	3145732
  1843   300004  9F                 	db	159
  1844                           
  1845                           ;Config register CONFIG6 @ 0x300005
  1846                           ;	WDT Window Select bits
  1847                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1848                           ;	WDT input clock selector
  1849                           ;	WDTCCS = SC, Software Control
  1850   300005                     	org	3145733
  1851   300005  FF                 	db	255
  1852                           
  1853                           ;Config register CONFIG7 @ 0x300006
  1854                           ;	Boot Block Size selection bits
  1855                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1856                           ;	Boot Block enable bit
  1857                           ;	BBEN = OFF, Boot block disabled
  1858                           ;	Storage Area Flash enable bit
  1859                           ;	SAFEN = OFF, SAF disabled
  1860                           ;	Background Debugger
  1861                           ;	DEBUG = 0x1, unprogrammed default
  1862   300006                     	org	3145734
  1863   300006  FF                 	db	255
  1864                           
  1865                           ;Config register CONFIG8 @ 0x300007
  1866                           ;	Boot Block Write Protection bit
  1867                           ;	WRTB = OFF, Boot Block not Write protected
  1868                           ;	Configuration Register Write Protection bit
  1869                           ;	WRTC = OFF, Configuration registers not Write protected
  1870                           ;	Data EEPROM Write Protection bit
  1871                           ;	WRTD = OFF, Data EEPROM not Write protected
  1872                           ;	SAF Write protection bit
  1873                           ;	WRTSAF = OFF, SAF not Write Protected
  1874                           ;	Application Block write protection bit
  1875                           ;	WRTAPP = OFF, Application Block not write protected
  1876   300007                     	org	3145735
  1877   300007  FF                 	db	255
  1878                           
  1879                           ;Config register CONFIG9 @ 0x300008
  1880                           ;	PFM and Data EEPROM Code Protection bit
  1881                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1882   300008                     	org	3145736
  1883   300008  FF                 	db	255
  1884                           tosu	equ	0x4FF
  1885                           tosh	equ	0x4FE
  1886                           tosl	equ	0x4FD
  1887                           stkptr	equ	0x4FC
  1888                           pclatu	equ	0x4FB
  1889                           pclath	equ	0x4FA
  1890                           pcl	equ	0x4F9
  1891                           tblptru	equ	0x4F8
  1892                           tblptrh	equ	0x4F7
  1893                           tblptrl	equ	0x4F6
  1894                           tablat	equ	0x4F5
  1895                           prodh	equ	0x4F4
  1896                           prodl	equ	0x4F3
  1897                           indf0	equ	0x4EF
  1898                           postinc0	equ	0x4EE
  1899                           postdec0	equ	0x4ED
  1900                           preinc0	equ	0x4EC
  1901                           plusw0	equ	0x4EB
  1902                           fsr0h	equ	0x4EA
  1903                           fsr0l	equ	0x4E9
  1904                           wreg	equ	0x4E8
  1905                           indf1	equ	0x4E7
  1906                           postinc1	equ	0x4E6
  1907                           postdec1	equ	0x4E5
  1908                           preinc1	equ	0x4E4
  1909                           plusw1	equ	0x4E3
  1910                           fsr1h	equ	0x4E2
  1911                           fsr1l	equ	0x4E1
  1912                           bsr	equ	0x4E0
  1913                           indf2	equ	0x4DF
  1914                           postinc2	equ	0x4DE
  1915                           postdec2	equ	0x4DD
  1916                           preinc2	equ	0x4DC
  1917                           plusw2	equ	0x4DB
  1918                           fsr2h	equ	0x4DA
  1919                           fsr2l	equ	0x4D9
  1920                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    38
    Data        0
    BSS         0
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      27
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    NULL$0	PTR FTN()void  size(2) Largest target is 0

    PWM1_16BIT_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), NULL(), 

    PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), NULL(), 

    PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), NULL(), 

    PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    PWM2_16BIT_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Period_DefaultInterruptHandler(), NULL(), 

    PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Period_DefaultInterruptHandler(), 

    PWM2_16BIT_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Slice1Output1_DefaultInterruptHandler(), NULL(), 

    PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Slice1Output1_DefaultInterruptHandler(), 

    PWM2_16BIT_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Slice1Output2_DefaultInterruptHandler(), NULL(), 

    PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    S429$4$0	PTR void  size(2) Largest target is 0

    S429$5$0	PTR void  size(2) Largest target is 0

    S429$6$0	PTR void  size(2) Largest target is 0

    S429SPI_INTERFACE$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    S429SPI_INTERFACE$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    S429SPI_INTERFACE$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    S429SPI_INTERFACE$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    S429SPI_INTERFACE$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    S429SPI_INTERFACE$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    S429SPI_INTERFACE$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    S429SPI_INTERFACE$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    S429SPI_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    S429SPI_INTERFACE$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    S429SPI_INTERFACE$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    S429SPI_INTERFACE$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    S429SPI_INTERFACE$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S429SPI_INTERFACE$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Host$BufferExchange	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferExchange(), 

    SPI1_Host$BufferRead	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferRead(), 

    SPI1_Host$BufferWrite	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI1_BufferWrite(), 

    SPI1_Host$ByteExchange	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteExchange(), 

    SPI1_Host$ByteRead	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI1_ByteRead(), 

    SPI1_Host$ByteWrite	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI1_ByteWrite(), 

    SPI1_Host$Close	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Close(), 

    SPI1_Host$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Deinitialize(), 

    SPI1_Host$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> SPI1_Initialize(), 

    SPI1_Host$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsRxReady(), 

    SPI1_Host$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> SPI1_IsTxReady(), 

    SPI1_Host$Open	PTR FTN(unsigned char ,)_Bool  size(2) Largest target is 1
		 -> SPI1_Open(), 

    SPI1_Host$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    SPI1_Host$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 


Critical Paths under _main in COMRAM

    _PWM2_16BIT_Initialize->_PWM2_16BIT_Period_SetInterruptHandler
    _PWM2_16BIT_Initialize->_PWM2_16BIT_Slice1Output1_SetInterruptHandler
    _PWM2_16BIT_Initialize->_PWM2_16BIT_Slice1Output2_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Period_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output1_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output2_SetInterruptHandler
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    1044
                                              2 COMRAM     7     7      0
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     882
                   _CLOCK_Initialize
                    _DAC1_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
              _PWM1_16BIT_Initialize
              _PWM2_16BIT_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_16BIT_Initialize                                0     0      0     294
_PWM2_16BIT_Period_SetInterruptHandl
_PWM2_16BIT_Slice1Output1_SetInterru
_PWM2_16BIT_Slice1Output2_SetInterru
 ---------------------------------------------------------------------------------
 (3) _PWM2_16BIT_Slice1Output2_SetInterruptHandler         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM2_16BIT_Slice1Output1_SetInterruptHandler         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM2_16BIT_Period_SetInterruptHandler                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_Initialize                                0     0      0     294
_PWM1_16BIT_Period_SetInterruptHandl
_PWM1_16BIT_Slice1Output1_SetInterru
_PWM1_16BIT_Slice1Output2_SetInterru
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output2_SetInterruptHandler         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output1_SetInterruptHandler         2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Period_SetInterruptHandler                2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _DAC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _DAC1_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _PWM1_16BIT_Initialize
       _PWM1_16BIT_Period_SetInterruptHandler
       _PWM1_16BIT_Slice1Output1_SetInterruptHandler
       _PWM1_16BIT_Slice1Output2_SetInterruptHandler
     _PWM2_16BIT_Initialize
       _PWM2_16BIT_Period_SetInterruptHandler
       _PWM2_16BIT_Slice1Output1_SetInterruptHandler
       _PWM2_16BIT_Slice1Output2_SetInterruptHandler
     _SPI1_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             200      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9      1B       1       28.4%
STACK                0      0       0       2        0.0%
DATA                 0      0      1B       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBIGSFR_1        100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITBIGSFRhhhhhh     29      0       0      22        0.0%
BITBIGSFRhhhhhl      6      0       0      23        0.0%
BITBIGSFRhhhhhl      6      0       0      24        0.0%
BITBIGSFRhhhhlh      5      0       0      25        0.0%
BITBIGSFRhhhhll      3      0       0      26        0.0%
BITBIGSFRhhhlhh      1      0       0      27        0.0%
BITBIGSFRhhhlhl      6      0       0      28        0.0%
BITBIGSFRhhhllh     2D      0       0      29        0.0%
BITBIGSFRhlhhhh     48      0       0      30        0.0%
BITBIGSFRhlhhhl    178      0       0      31        0.0%
BITBIGSFRhlhhhl     1A      0       0      32        0.0%
BITBIGSFRhlhhhl     53      0       0      33        0.0%
BITBIGSFRhlhhhl      7      0       0      34        0.0%
BITBIGSFRhlhhhl      6      0       0      35        0.0%
BITBIGSFRhlhhhl    151      0       0      36        0.0%
BITBIGSFRhlhhhl      1      0       0      37        0.0%
BITBIGSFRhlhhhl      1      0       0      38        0.0%
BITBIGSFRhlhhhl     1F      0       0      39        0.0%
BITBIGSFRhlhhl       1      0       0      40        0.0%
BITBIGSFRhlhl        2      0       0      41        0.0%
BITBIGSFRlh          1      0       0      42        0.0%
BITBIGSFRll         7D      0       0      43        0.0%
ABS                  0      0      1B      44        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 19 22:12:46 2024

                                           _SPI1_ByteExchange 0000  
                                                           l7 1034  
                                                          l74 0F9C  
                                             _DAC1_Initialize 102A  
                                                         l111 1066  
                                                         l114 107A  
                                                         l108 1070  
                                                         l221 1048  
                                                         l224 105C  
                                                         l410 108E  
                                                         l218 1052  
                                                         l423 1084  
                                                         l184 0F30  
                                                         l507 0EC4  
                                                         l292 100C  
                                                         l525 1028  
                                                         l542 0FEE  
                                                         l387 0FD0  
                                                         l397 1098  
                                                         l576 0D86  
                                                         l577 0E1E  
                                                         u500 0DF8  
                                                         u501 0DF4  
                                                         u510 0E16  
                                                         u511 0E12  
                                                         u460 0D74  
                                                         u461 0D70  
                                                         u470 0D98  
                                                         u471 0D94  
                                                         u480 0DC2  
                                                         u481 0DBE  
                                                         u490 0DE2  
                                                         u491 0DDE  
                                  ??_INT0_SetInterruptHandler 0515  
                                                        l1331 0FF6  
                                                        l1351 100E  
                                                        l1345 0E26  
                                                        l1329 0FF0  
                                                        l1347 0E6C  
                                                        l1349 0E76  
                                                        l1701 0F06  
                                                        l1279 102A  
                                                        l1711 0F9E  
                                                        l1703 0F08  
                                                        l1721 0FC2  
                                                        l1713 0FA4  
                                                        l1705 0F14  
                                                        l1715 0FB0  
                                                        l1651 104A  
                                                        l1707 0F20  
                                                        l1723 0FD2  
                                                        l1731 0D28  
                                                        l1661 107C  
                                                        l1717 0FB2  
                                                        l1645 1068  
                                                        l1653 1040  
                                                        l1709 0F2C  
                                                        l1725 0FDE  
                                                        l1741 0D38  
                                                        l1733 0D2C  
                                                        l1719 0FC0  
                                                        l1647 105E  
                                                        l1671 0F6C  
                                                        l1663 0F32  
                                                        l1655 1054  
                                                        l1727 0FE2  
                                                        l1751 0D58  
                                                        l1743 0D3C  
                                                        l1735 0D2E  
                                                        l1657 1090  
                                                        l1649 1072  
                                                        l1681 0F80  
                                                        l1673 0F6E  
                                                        l1665 0F3E  
                                                        l1729 0FEA  
                                                        l1761 0D98  
                                                        l1753 0D74  
                                                        l1745 0D40  
                                                        l1737 0D30  
                                                        l1659 1086  
                                                        l1683 0F8C  
                                                        l1675 0F70  
                                                        l1667 0F68  
                                                        l1691 0EFC  
                                                        l1771 0E00  
                                                        l1763 0D9C  
                                                        l1755 0D7E  
                                                        l1747 0D50  
                                                        l1739 0D32  
                                                        l1685 0F98  
                                                        l1677 0F72  
                                                        l1669 0F6A  
                                                        l1693 0EFE  
                                                        l1773 0E16  
                                                        l1765 0DC2  
                                                        l1757 0D80  
                                                        l1749 0D54  
                                                        l1679 0F74  
                                                        l1695 0F00  
                                                        l1687 0EC6  
                                                        l1767 0DE2  
                                                        l1759 0D84  
                                                        l1697 0F02  
                                                        l1689 0ED2  
                                                        l1769 0DF8  
                                                        l1699 0F04  
                                                        _LATA 04BE  
                                                        _LATB 04BF  
                                                        _LATC 04C0  
                                                 main@counter 051A  
                                                        _WPUA 0401  
                                                        _WPUB 0409  
                                                        _WPUC 0411  
                                                        _main 0D28  
                                   ?_INT2_SetInterruptHandler 0513  
                                                        start 7FFC  
                                                ___param_bank 0000  
                                                       ?_main 0513  
                                                       _IOCAF 0407  
                                                       _IOCBF 040F  
                                                       _IOCCF 0417  
                                                       _IOCAN 0406  
                                                       _IOCAP 0405  
                                                       _IOCBN 040E  
                                                       _IOCCN 0416  
                                                       _IOCBP 040D  
                                                       _IOCCP 0415  
                                      ?_PWM1_16BIT_Initialize 0513  
                                                       _OSCEN 00B3  
                                                       _PORTB 04CF  
                                                       _TRISA 04C6  
                                                       _TRISB 04C7  
                                                       _TRISC 04C8  
            _PWM2_16BIT_Slice1Output1_DefaultInterruptHandler 0000  
            _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler 0000  
                                    _INT1_SetInterruptHandler 1086  
                                                       status 04D8  
                                       _PWM2_16BIT_Initialize 0EC6  
                                             __initialization 1036  
                                                __end_of_main 0E26  
                                     __end_of_DAC1_Initialize 1036  
                                                      ??_main 0515  
                                               __activetblptr 0002  
               __end_of_PWM1_16BIT_Period_SetInterruptHandler 107C  
               __end_of_PWM2_16BIT_Period_SetInterruptHandler 105E  
                     ??_PWM2_16BIT_Period_SetInterruptHandler 0515  
                     ??_PWM1_16BIT_Period_SetInterruptHandler 0515  
                      ?_PWM2_16BIT_Period_SetInterruptHandler 0513  
                      ?_PWM1_16BIT_Period_SetInterruptHandler 0513  
                       _PWM1_16BIT_Period_SetInterruptHandler 1072  
                       _PWM2_16BIT_Period_SetInterruptHandler 1054  
                                                      _ACTCON 00AC  
                                                      _ANSELA 0400  
                                                      _ANSELB 0408  
                                                      _ANSELC 0410  
                                                      _RB4I2C 0287  
                                                      _RB6I2C 0286  
                                                      _RA4PPS 0205  
                                                      _RA5PPS 0206  
                                                      _RB4PPS 020D  
                                                      _RB5PPS 020E  
                                                      _RC5PPS 0216  
                                                      _ODCONA 0402  
                                                      _ODCONB 040A  
                                                      _ODCONC 0412  
                                                      _INLVLA 0404  
                                                      _INLVLB 040C  
                                                      _INLVLC 0414  
                                                      _OSCFRQ 00B1  
                                           __end_of_SPI1_Host 0D1D  
                                                      isa$std 0001  
                                           ?_CLOCK_Initialize 0513  
                                _INT2_DefaultInterruptHandler 0000  
                                          ??_CLOCK_Initialize 0513  
                                                __mediumconst 0000  
                                                      tblptru 04F8  
                    INT2_SetInterruptHandler@InterruptHandler 0513  
                    INT1_SetInterruptHandler@InterruptHandler 0513  
                    INT0_SetInterruptHandler@InterruptHandler 0513  
       PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler 0513  
PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler 0513  
PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler 0513  
       PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler 0513  
PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler 0513  
PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler 0513  
                                              _SPI1_IsRxReady 0000  
                                              _SPI1_IsTxReady 0000  
                                           _SYSTEM_Initialize 0FD2  
                                                  __accesstop 0560  
                                     __end_of__initialization 1036  
                                              _SPI1_ByteWrite 0000  
                                          ?_SYSTEM_Initialize 0513  
                                      ?_PWM2_16BIT_Initialize 0513  
                                               ___rparam_used 0001  
                                              __pcstackCOMRAM 0513  
                                         ??_SYSTEM_Initialize 0515  
                                            ?_DAC1_Initialize 0513  
                                           ??_SPI1_Initialize 0513  
                                          _spi1_configuration 0D1D  
                            __end_of_INT2_SetInterruptHandler 1086  
                                   __end_of_SYSTEM_Initialize 0FF0  
                                       _INT0_InterruptHandler 0505  
                                                  __pnvCOMRAM 0501  
                                                     _DAC1CON 007F  
                                     ??_PWM1_16BIT_Initialize 0515  
                                  ??_INT1_SetInterruptHandler 0515  
                                                     _OSCCON1 00AD  
                                                     _OSCCON3 00AF  
                                                     _SPI1CLK 008C  
                                                     _SPI1RXB 0080  
                                                     _SPI1TXB 0081  
                                                     _OSCTUNE 00B0  
                                                     _PWM1CLK 0461  
                                                     _PWM1GIE 0468  
                                                     _PWM2CLK 0470  
                                                     _PWM1CON 0469  
                                                     _PWM2GIE 0477  
                                                     _PWM1GIR 0467  
                                                     _PWM2CON 0478  
                                                     _PWM2GIR 0476  
                                                     _PWM1ERS 0460  
                                                     _PWM1LDS 0462  
                                                     _PWM2ERS 046F  
                                                     _PWM2LDS 0471  
                                                     _PWM1PRH 0464  
                                                     _PWM1PRL 0463  
                                                     _PWM2PRH 0473  
                                                     _PWM2PRL 0472  
                                                     _SLRCONA 0403  
                                                     _SLRCONB 040B  
                                                     _SLRCONC 0413  
                                   ?_INT0_SetInterruptHandler 0513  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                                __psmallconst 0D00  
                                                     __pcinit 1036  
                                                     __ramtop 0D00  
                                                     __ptext0 0D28  
                                                     __ptext1 0FD2  
                                                     __ptext2 0FF0  
                                                     __ptext3 0EC6  
                                                     __ptext4 1040  
                                                     __ptext5 104A  
                                                     __ptext6 1054  
                                                     __ptext7 0F32  
                                                     __ptext8 105E  
                                                     __ptext9 1068  
        __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler 1072  
        __end_of_PWM2_16BIT_Slice1Output1_SetInterruptHandler 1054  
              ??_PWM2_16BIT_Slice1Output1_SetInterruptHandler 0515  
              ??_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0515  
               ?_PWM2_16BIT_Slice1Output1_SetInterruptHandler 0513  
               ?_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0513  
                _PWM1_16BIT_Slice1Output1_SetInterruptHandler 1068  
                _PWM2_16BIT_Slice1Output1_SetInterruptHandler 104A  
                                    ??_PIN_MANAGER_Initialize 0513  
                                                     main@xxx 0515  
                                        end_of_initialization 1036  
            _PWM2_16BIT_Slice1Output2_DefaultInterruptHandler 0000  
            _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler 0000  
                                    _INT2_SetInterruptHandler 107C  
                                                   _PIR10bits 04BD  
                                               __Lmediumconst 0000  
                                             _SPI1_BufferRead 0000  
                                                   _SPI1TCNTH 0083  
                                                   _SPI1TCNTL 0082  
                                                   _PWM1S1CFG 046A  
                                                   _PWM1S1P1H 046C  
                                                   _PWM1S1P2H 046E  
                                                   _PWM1S1P1L 046B  
                                                   _PWM1S1P2L 046D  
                                                   _PWM2S1CFG 0479  
                                                   _PWM2S1P1H 047B  
                                                   _PWM2S1P2H 047D  
                                                   _PWM2S1P1L 047A  
                                                   _PWM2S1P2L 047C  
                                                   _PWM1PIPOS 0466  
                                                   _PWM2PIPOS 0475  
                                                   _SPI1_Host 0D01  
                                                   _SPI1_Open 0000  
                                       _INT1_InterruptHandler 0503  
                                         _SPI1_BufferExchange 0000  
                                                   _TRISBbits 04C7  
                                     ??_PWM2_16BIT_Initialize 0515  
                                             _SPI1_Initialize 0FF0  
                                __end_of_INTERRUPT_Initialize 0FD2  
                                _INT0_DefaultInterruptHandler 0000  
                                         start_initialization 1036  
                               __end_of_PWM1_16BIT_Initialize 0F9E  
                                               _SPI1_ByteRead 0000  
                            __end_of_INT0_SetInterruptHandler 109A  
                                     __end_of_SPI1_Initialize 100E  
                                       _INT2_InterruptHandler 0501  
                                      _PIN_MANAGER_Initialize 0E26  
                                                    _DAC1DATL 007D  
                                                 __smallconst 0D00  
                                  ??_INT2_SetInterruptHandler 0515  
                                        _INTERRUPT_Initialize 0F9E  
                   _PWM2_16BIT_Period_DefaultInterruptHandler 0000  
                   _PWM1_16BIT_Period_DefaultInterruptHandler 0000  
                                            _CLOCK_Initialize 100E  
                                   ?_INT1_SetInterruptHandler 0513  
                          _PWM2_16BIT_Period_InterruptHandler 0507  
                                                    _PIE3bits 04AB  
                                                    _PIE4bits 04AC  
                                                    _PIE5bits 04AD  
                                                _SPI1CON0bits 0084  
                                                    _PIR1bits 04B4  
                                                    _SPI1BAUD 0089  
                                                    _PIR3bits 04B6  
                                                    _PIR4bits 04B7  
                                                    _SPI1CON0 0084  
                                                    _SPI1CON1 0085  
                                                    _SPI1CON2 0086  
                                                    _PIR5bits 04B8  
                                                    _PIR6bits 04B9  
                                                    _PWM1CPRE 0465  
                                                    _PWM2CPRE 0474  
                                                _SPI1INTFbits 008A  
                                           _SPI1_Deinitialize 0000  
                                                   main@bShow 0519  
        __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler 1068  
        __end_of_PWM2_16BIT_Slice1Output2_SetInterruptHandler 104A  
              ??_PWM2_16BIT_Slice1Output2_SetInterruptHandler 0515  
              ??_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0515  
               ?_PWM2_16BIT_Slice1Output2_SetInterruptHandler 0513  
               ?_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0513  
                _PWM1_16BIT_Slice1Output2_SetInterruptHandler 105E  
                _PWM2_16BIT_Slice1Output2_SetInterruptHandler 1040  
                                                   main@light 051B  
                                            ?_SPI1_Initialize 0513  
                                                 _INTCON0bits 04D6  
                   _PWM1_16BIT_Slice1Output1_InterruptHandler 0511  
                   _PWM2_16BIT_Slice1Output1_InterruptHandler 050B  
                                       ?_INTERRUPT_Initialize 0513  
                                           ??_DAC1_Initialize 0513  
                                    _INT0_SetInterruptHandler 1090  
                               __end_of_PWM2_16BIT_Initialize 0F32  
                                                    __Hrparam 0000  
                                                    __Lrparam 0000  
                                                    __ptext10 1072  
                                                    __ptext11 0E26  
                                                    __ptext12 0F9E  
                                                    __ptext13 107C  
                                                    __ptext14 1086  
                                                    __ptext15 1090  
                                                    __ptext16 102A  
                                                    __ptext17 100E  
                                                    isa$xinst 0000  
                          _PWM1_16BIT_Period_InterruptHandler 050D  
                                _INT1_DefaultInterruptHandler 0000  
                                                 _PWM1GIEbits 0468  
                                                 _PWM1CONbits 0469  
                                                 _PWM2GIEbits 0477  
                                                 _PWM1GIRbits 0467  
                                                 _PWM2CONbits 0478  
                                                 _PWM2GIRbits 0476  
                                      ??_INTERRUPT_Initialize 0515  
                                     ?_PIN_MANAGER_Initialize 0513  
                                                  _SPI1SCKPPS 026A  
                                                  _SPI1SDIPPS 026B  
                                            _SPI1_BufferWrite 0000  
                   _PWM1_16BIT_Slice1Output2_InterruptHandler 050F  
                   _PWM2_16BIT_Slice1Output2_InterruptHandler 0509  
                                    __end_of_CLOCK_Initialize 102A  
                                                  _SPI1_Close 0000  
                                       _PWM1_16BIT_Initialize 0F32  
                            __end_of_INT1_SetInterruptHandler 1090  
                              __end_of_PIN_MANAGER_Initialize 0EC6  
                                  __end_of_spi1_configuration 0D27  
